services:
  ecommerce-backend:
    container_name: nestjs-generic-e-commerce-service
    build:
      context: .
      dockerfile: dockerfile.local
    image: e-commerce-service
    restart: always
    # There is no need to do port mapping since incoming request are manage by the reverse proxy
    # ports:
    #   - $HOST_PORT:$PORT
    env_file:
      - .dev.env
    # volumes specified for hot reloading
    volumes:
      - ./src:/app/src
      - ./test:/app/test
    depends_on:
      - database
  database:
    container_name: nestjs-generic-e-commerce-db
    image: postgres:16.3-alpine3.20
    restart: always
    shm_size: 128mb
    env_file:
      - .dev.env
    # ports exposed for testing purposes
    ports:
      - 5432:5432
    volumes:
      - postgresql-data:/var/lib/postgresql/data
  reverse-proxy:
    container_name: reverse-proxy
    image: nginx:1.27.1-alpine3.20
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./letsencrypt:/letsencrypt
      - ./letsencrypt/certs:/etc/letsencrypt
    depends_on:
      - ecommerce-backend
  certificates:
    container_name: certificates
    build:
      context: .
      dockerfile: ./certbot/dockerfile
    image: certbot
    restart: always
    volumes:
      - ./letsencrypt:/letsencrypt
      - ./letsencrypt/certs:/etc/letsencrypt
    command: tail -f /dev/null # Mantiene el contenedor corriendo

volumes:
  postgresql-data:


networks:
  default:
    name: nestjs-generic-e-commerce-network

# docker compose --env-file .dev.env -f docker-compose.local.yml up --build
